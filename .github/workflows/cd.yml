name: cd

run-name: Deploy to ${{ inputs.environment }} by @${{ github.actor }}

on:
  workflow_dispatch:
    inputs:
      environment:
        type: environment
    
jobs:
  deployment:
    name: Deploy ${{ inputs.environment }}
    
    runs-on: ubuntu-latest
    
    environment: ${{ inputs.environment }}
    
    env:
      SERVER_NAME: ${{ secrets.SERVER_NAME }}
      CADDY_MERCURE_JWT_SECRET: ${{ secrets.JWT_SECRET }}
    
    steps:
      - name: Configure SSH
        run: |
          mkdir -p ~/.ssh/
          echo "$SSH_KEY" > ~/.ssh/id_ed25519
          chmod 600 ~/.ssh/id_ed25519
          cat >>~/.ssh/config <<END
          Host ${{ inputs.environment }}
            HostName $SSH_HOST
            User $SSH_USER
            IdentityFile ~/.ssh/id_ed25519
            StrictHostKeyChecking no
          END
        env:
          SSH_USER: ${{ secrets.SSH_USERNAME }}
          SSH_KEY: ${{ secrets.SSH_KEY }}
          SSH_HOST: ${{ secrets.SSH_HOST }}
          
      - name: Checkout
        run: ssh ${{ inputs.environment }} 'cd app && git pull origin main --rebase'
        
      - name: Build
        continue-on-error: true
        run: >
          ssh ${{ inputs.environment }} 'cd app &&
          SERVER_NAME='"$SERVER_NAME"'
          CADDY_MERCURE_JWT_SECRET='"$CADDY_MERCURE_JWT_SECRET"'
          docker compose -f docker-compose.yml -f docker-compose.prod.yml up --build --detach'
        
      - name: Delete SSH
        run: rm -rf ~/.ssh/
